{"ast":null,"code":"var _jsxFileName = \"/Users/daniilpogolovkin/Desktop/menushka/client/menu/src/components/CrudDish.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Buffer } from 'buffer';\nimport style from '../styles/crud.css';\nimport Axios from 'axios';\nimport CrudCard from './CrudCard';\nimport imgStar from '../images/Star.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrudDish = () => {\n  _s();\n  const [formData, setFormData] = React.useState({\n    title: '',\n    description: '',\n    price: '',\n    rating: '',\n    image: '',\n    sale: true,\n    products: true,\n    newDesc: ''\n  });\n  const [menuList, setMenuList] = React.useState([]);\n  const fs = require('fs');\n\n  // const imgElement = useRef(null); // Create a ref for the img element\n\n  // useEffect(() => {\n  //   const fileReader = new FileReader();\n  //   fileReader.onloadend = function() {\n  //     imgElement.current.src = fileReader.result; // Set the src attribute of the img element to the image\n  //   }\n  //   fileReader.readAsDataURL(new Blob([formData.image]));\n\n  // }, []);\n\n  const image_ = new Buffer.from(formData.image); // Create a buffer from the binary string\n  const imageUrl = 'data:image/jpeg;base64,' + image_.toString('base64'); // Convert the buffer to a base64-encoded string\n\n  const menuArr = menuList.map(dish => {\n    return /*#__PURE__*/_jsxDEV(CrudCard, {\n      img: imgStar,\n      image_src: imageUrl,\n      ...dish\n    }, dish.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this);\n  });\n  React.useEffect(() => {\n    Axios.get('http://localhost:3001/api/get').then(response => {\n      setMenuList(response.data);\n    });\n  }, []);\n  function handleChange(event) {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = event.target;\n    setFormData(prevFormData => {\n      return {\n        ...prevFormData,\n        [name]: type === 'checkbox' ? checked : value\n      };\n    });\n  }\n  function handleImageChange(event) {\n    const {\n      files\n    } = event.target;\n    const imageBuffer = fs.readFileSync(files[0]); // Read the image file as a binary buffer\n    const imageBinaryString = imageBuffer.toString('binary'); // Convert the binary buffer to a binary string\n\n    // update the formData state variable with the image data\n    setFormData(prevFormData => {\n      return {\n        ...prevFormData,\n        image: imageBinaryString\n      };\n    });\n  }\n  const [binaryString, setBinaryString] = useState(null); // State variable to store the binary string\n  const fileInput = useRef(null); // Create a ref for the file input element\n\n  const handleFileChange = e => {\n    const file = e.target.files[0]; // Get the selected file\n\n    // Create a FileReader to read the file as a binary string\n    const fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const image = new Buffer.from(fileReader.result, 'binary'); // Create a buffer from the binary string\n      setBinaryString(image.toString('base64')); // Set the base64-encoded string in state\n    };\n\n    fileReader.readAsBinaryString(file); // Read the file as a binary string\n  };\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    Axios.post('http://localhost:3001/api/insert', {\n      title: formData.title,\n      description: formData.description,\n      price: formData.price,\n      rating: formData.rating,\n      image: formData.image,\n      sale: formData.sale,\n      products: formData.products\n    }).then(() => {\n      console.log(formData);\n    });\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg, image/svg+xml, image/png\",\n        placeholder: \"\\u0424\\u043E\\u0442\\u043E \\u0431\\u043B\\u044E\\u0434\\u0430\",\n        name: \"image\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0431\\u043B\\u044E\\u0434\\u0430\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0431\\u043B\\u044E\\u0434\\u0430\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n        name: \"price\",\n        value: formData.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\",\n        name: \"rating\",\n        value: formData.rating,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"sale\",\n        id: \"sale\",\n        checked: formData.sale,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sale\",\n        children: \"\\u041D\\u0430 \\u0431\\u043B\\u044E\\u0434\\u043E \\u0434\\u0435\\u0439\\u0441\\u0442\\u0432\\u0443\\u0435\\u0442 \\u0441\\u043A\\u0438\\u0434\\u043A\\u0430?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"products\",\n        id: \"products\",\n        checked: formData.products,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"products\",\n        children: \"\\u041F\\u0440\\u043E\\u0434\\u0443\\u043A\\u0442\\u044B \\u0432 \\u043D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0438?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form--button\",\n        onClick: handleSubmit,\n        children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"cards-list\",\n      children: menuArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(CrudDish, \"z67zlKTAjle9xQykiMe5gwGeXG4=\");\n_c = CrudDish;\nexport default CrudDish;\nvar _c;\n$RefreshReg$(_c, \"CrudDish\");","map":{"version":3,"names":["React","useEffect","useRef","Buffer","style","Axios","CrudCard","imgStar","CrudDish","formData","setFormData","useState","title","description","price","rating","image","sale","products","newDesc","menuList","setMenuList","fs","require","image_","from","imageUrl","toString","menuArr","map","dish","id","get","then","response","data","handleChange","event","name","value","type","checked","target","prevFormData","handleImageChange","files","imageBuffer","readFileSync","imageBinaryString","binaryString","setBinaryString","fileInput","handleFileChange","e","file","fileReader","FileReader","onloadend","result","readAsBinaryString","handleSubmit","preventDefault","post","console","log"],"sources":["/Users/daniilpogolovkin/Desktop/menushka/client/menu/src/components/CrudDish.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { Buffer } from 'buffer';\n\nimport style from '../styles/crud.css'\nimport Axios from 'axios'\nimport CrudCard from './CrudCard'\nimport imgStar from '../images/Star.png'\n\nconst CrudDish = () => {\n    const [formData, setFormData] = React.useState({\n        title: '',\n        description: '',\n        price: '',\n        rating: '',\n        image: '',\n        sale: true,\n        products: true,\n        newDesc: ''\n    })\n\n    const [menuList, setMenuList] = React.useState([])\n\n    const fs = require('fs');\n\n    \n\n    // const imgElement = useRef(null); // Create a ref for the img element\n\n    // useEffect(() => {\n    //   const fileReader = new FileReader();\n    //   fileReader.onloadend = function() {\n    //     imgElement.current.src = fileReader.result; // Set the src attribute of the img element to the image\n    //   }\n    //   fileReader.readAsDataURL(new Blob([formData.image]));\n      \n    // }, []);\n\n\n\n  const image_ = new Buffer.from(formData.image); // Create a buffer from the binary string\n  const imageUrl = 'data:image/jpeg;base64,' + image_.toString('base64'); // Convert the buffer to a base64-encoded string\n  \n\n    const menuArr = menuList.map(dish =>{\n      return <CrudCard\n      key={dish.id}\n      img={imgStar}\n      image_src={imageUrl}\n      {...dish}/>\n    })\n  \n\n    \n\n    React.useEffect(()=>{\n      Axios.get('http://localhost:3001/api/get').then((response)=>{\n          setMenuList(response.data)\n      })\n    }, [])\n\n    function handleChange(event) {\n        const {name, value, type, checked} = event.target\n\n        setFormData(prevFormData => {\n            return{\n                ...prevFormData,\n                [name]: type === 'checkbox' ? checked : value\n            }\n        })\n    }\n\n    function handleImageChange(event) {\n        const { files } = event.target;\n    \n\n        const imageBuffer = fs.readFileSync(files[0]); // Read the image file as a binary buffer\n        const imageBinaryString = imageBuffer.toString('binary'); // Convert the binary buffer to a binary string\n\n      \n          // update the formData state variable with the image data\n          setFormData(prevFormData => {\n            return {\n              ...prevFormData,\n              image: imageBinaryString\n            };\n          });\n      }\n\n\n\n\n\n\n\n        const [binaryString, setBinaryString] = useState(null); // State variable to store the binary string\n        const fileInput = useRef(null); // Create a ref for the file input element\n      \n        const handleFileChange = (e) => {\n          const file = e.target.files[0]; // Get the selected file\n      \n          // Create a FileReader to read the file as a binary string\n          const fileReader = new FileReader();\n          fileReader.onloadend = function() {\n            const image = new Buffer.from(fileReader.result, 'binary'); // Create a buffer from the binary string\n            setBinaryString(image.toString('base64')); // Set the base64-encoded string in state\n          }\n          fileReader.readAsBinaryString(file); // Read the file as a binary string\n        }\n\n\n\n\n\n\n\n\n\n\n    function handleSubmit(event){\n        event.preventDefault()\n        Axios.post('http://localhost:3001/api/insert',{\n          title: formData.title,\n          description: formData.description,\n          price: formData.price,\n          rating: formData.rating,\n          image: formData.image,\n          sale: formData.sale,\n          products: formData.products\n        }).then(()=>{\n            console.log(formData)\n        })\n    };\n\n\n  return (\n    <main>\n        <link rel=\"stylesheet\" href={style} />\n        <div className='form' >\n            <input type=\"file\"\n            accept='image/jpeg, image/svg+xml, image/png'\n            placeholder='Фото блюда'\n            name=\"image\"\n            onChange = {handleImageChange}\n            />\n\n            <input type='text'\n            placeholder='Название блюда'\n            name='title'\n            value={formData.title}\n            onChange = {handleChange}/>\n\n            <input type='text'\n            placeholder='Описание блюда'\n            name='description'\n            value={formData.description}\n            onChange={handleChange}\n            />\n\n            <input type='text'\n            placeholder='Стоимость'\n            name='price'\n            value={formData.price}\n            onChange={handleChange}/>\n\n            <input type='text'\n            placeholder='Рейтинг'\n            name='rating'\n            value={formData.rating}\n            onChange={handleChange}/>\n\n            <input \n            type=\"checkbox\"\n            name='sale'\n            id='sale'\n            checked={formData.sale}\n            onChange={handleChange}\n             />\n\n            <label htmlFor='sale'>На блюдо действует скидка?</label>\n\n            <input \n            type=\"checkbox\"\n            name='products'\n            id='products'\n            checked={formData.products}\n            onChange={handleChange}\n             />\n\n            <label htmlFor='products'>Продукты в наличии?</label>\n            <br />\n\n            <button className=\"form--button\" onClick={handleSubmit}>Подтвердить</button>\n        </div>\n        <section className='cards-list'>{menuArr}</section>\n    </main>\n  )\n}\n\nexport default CrudDish"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}